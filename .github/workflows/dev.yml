name: Deploy to Cloud Run

on:
  push:
    branches: ["branch_name"]

env:
  PROJECT_ID: ocuris-backend
  GAR_LOCATION: asia-south2
  REGISTRY: ocuris-repos
  SERVICE: service-name
  CREDENTIALS_JSON: ${{ secrets.CREDENTIALS_JSON }}
  GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # NOTE: Alternative option - authentication via credentials json
      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ env.CREDENTIALS_JSON }}
          token_format: "access_token"

      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)
      - name: Debug Output
        id: debug
        run: |
          echo "Access Token: ${{ steps.auth.outputs.access_token }}"
          echo "ID Token: ${{ steps.auth.outputs.id_token }}"
          echo "Project ID: ${{ env.PROJECT_ID }}"
          echo "Service: ${{ env.SERVICE }}"

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/${{ env.SERVICE }}:${{ github.sha }}"

      # END - Docker auth and build
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.GAR_LOCATION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/${{ env.SERVICE }}:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
